// Generated by Dagger (https://dagger.dev).
package com.covergenius.mca_sdk_android.domain.use_case;

import com.covergenius.mca_sdk_android.domain.repo.InitRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InitialiseUseCase_Factory implements Factory<InitialiseUseCase> {
  private final Provider<InitRepo> repoProvider;

  public InitialiseUseCase_Factory(Provider<InitRepo> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public InitialiseUseCase get() {
    return newInstance(repoProvider.get());
  }

  public static InitialiseUseCase_Factory create(Provider<InitRepo> repoProvider) {
    return new InitialiseUseCase_Factory(repoProvider);
  }

  public static InitialiseUseCase newInstance(InitRepo repo) {
    return new InitialiseUseCase(repo);
  }
}
