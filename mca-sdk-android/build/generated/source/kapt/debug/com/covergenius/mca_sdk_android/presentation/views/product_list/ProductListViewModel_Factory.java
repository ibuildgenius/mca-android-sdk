// Generated by Dagger (https://dagger.dev).
package com.covergenius.mca_sdk_android.presentation.views.product_list;

import android.app.Application;
import com.covergenius.mca_sdk_android.domain.use_case.InitialiseUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductListViewModel_Factory implements Factory<ProductListViewModel> {
  private final Provider<Application> appContextProvider;

  private final Provider<InitialiseUseCase> initUseCaseProvider;

  public ProductListViewModel_Factory(Provider<Application> appContextProvider,
      Provider<InitialiseUseCase> initUseCaseProvider) {
    this.appContextProvider = appContextProvider;
    this.initUseCaseProvider = initUseCaseProvider;
  }

  @Override
  public ProductListViewModel get() {
    return newInstance(appContextProvider.get(), initUseCaseProvider.get());
  }

  public static ProductListViewModel_Factory create(Provider<Application> appContextProvider,
      Provider<InitialiseUseCase> initUseCaseProvider) {
    return new ProductListViewModel_Factory(appContextProvider, initUseCaseProvider);
  }

  public static ProductListViewModel newInstance(Application appContext,
      InitialiseUseCase initUseCase) {
    return new ProductListViewModel(appContext, initUseCase);
  }
}
